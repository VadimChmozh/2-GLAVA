//Циклы while и for
/*
При написании скриптов зачастую встаёт задача сделать однотипное действие много раз.

Цикл «while»
Цикл while имеет следующий синтаксис:

while (condition) {
  // код
  // также называемый "телом цикла"
}
  Код из тела цикла выполняется, пока условие condition истинно.
  Цикл «do…while»
Проверку условия можно разместить под телом цикла, используя специальный синтаксис do..while
Цикл сначала выполнит тело, а затем проверит условие condition, и пока его значение равно true, он будет выполняться снова и снова.

Цикл «for»
for (начало; условие; шаг) {
  // ... тело цикла ...
}

начало	let i = 0	Выполняется один раз при входе в цикл
условие	i < 3	Проверяется перед каждой итерацией цикла.
Если оно вычислится в false, цикл остановится.
тело	alert(i)	Выполняется снова и снова, пока условие вычисляется в true.
шаг	i++	Выполняется после тела цикла на каждой итерации перед проверкой условия.
Любая часть for может быть пропущена.но ; мы должны оставить 

Прерывание цикла: «break»
Обычно цикл завершается при вычислении условия в false.

Но мы можем выйти из цикла в любой момент с помощью специальной директивы break

Директива continue – «облегчённая версия» break. 
При её выполнении цикл не прерывается, а переходит к следующей итерации (если условие все ещё равно true)

Метки для break/continue
Бывает, нужно выйти одновременно из нескольких уровней цикла сразу.
Обе этих директивы поддерживают метки, которые ставятся перед циклом. 
Метки – единственный способ для break/continue выйти за пределы текущего цикла, повлиять на выполнение внешнего.
*/
