//Функции
/* 
Зачастую нам надо повторять одно и то же действие во многих частях программы.
Чтобы не повторять один и тот же код во многих местах, придуманы функции. 
Функции являются основными «строительными блоками» программы.
Объвление функции: 

function showMessage() {
  alert( 'Всем привет!' );
}

Локальные переменные-Переменные, объявленные внутри функции, видны только внутри этой функции.
function showMessage() {
  let message = "Привет, я JavaScript!"; // локальная переменная
  Внешние переменные-У функции есть доступ к внешним переменным, например:

let userName = 'Вася';
function showMessage() {
 let message = 'Привет, ' + userName;
}
 Функция обладает полным доступом к внешним переменным и может изменять их значение.

Если при вызове функции аргумент не был указан, то его значением становится undefined.
Иногда имеет смысл присваивать значения по умолчанию для параметров не в объявлении функции, а на более позднем этапе.
Во время выполнения функции мы можем проверить, передан ли параметр, сравнив его с undefined

Возврат значения:
Функция может вернуть результат, который будет передан в вызвавший её код.
Директива return может находиться в любом месте тела функции. Как только выполнение доходит до этого места,
функция останавливается, и значение возвращается в вызвавший её код (присваивается переменной result выше).
Вызовов return может быть несколько.Возможно использовать return и без значения. Это приведёт к немедленному выходу из функции.

Никогда не добавляйте перевод строки между return и его значением

Функция – это действие. Поэтому имя функции обычно является глаголом.
Оно должно быть кратким, точным и описывать действие функции, чтобы программист, который будет читать код,
получил верное представление о том, что делает функция.
Как правило, используются глагольные префиксы, обозначающие общий характер действия, после которых следует уточнение.
Обычно в командах разработчиков действуют соглашения, касающиеся значений этих префиксов.

Функции, начинающиеся с…
"get…" – возвращают значение,
"calc…" – что-то вычисляют,
"create…" – что-то создают,
"check…" – что-то проверяют и возвращают логическое значение, и т.д.
Благодаря префиксам, при первом взгляде на имя функции становится понятным, 
что делает её код, и какое значение она может возвращать.

Функция должна делать только то, что явно подразумевается её названием. 
И это должно быть одним действием.
Два независимых действия обычно подразумевают две функции, даже если предполагается, 
что они будут вызываться вместе (в этом случае мы можем создать третью функцию, которая будет их вызывать).

Функции == Комментарии
Функции должны быть короткими и делать только что-то одно. Если это что-то большое, имеет смысл разбить функцию на несколько меньших.
Иногда следовать этому правилу непросто, но это определённо хорошее правило.
Небольшие функции не только облегчают тестирование и отладку – само существование таких функций выполняет роль хороших комментариев!

*/
